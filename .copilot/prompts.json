{
  "prompts": [
    {
      "name": "Webhook: WhatsApp Message Handler",
      "prompt": "Create a FastAPI route that handles incoming WhatsApp webhook messages. It should parse the message, identify the user, and start a step-by-step receipt creation process using session context.",
      "completion_type": "code"
    },
    {
      "name": "PDF Generator: Receipt",
      "prompt": "Write a Python function using ReportLab that receives user input (name, amount, description, date) and generates a receipt PDF. Include a basic signature area and company logo at the top.",
      "completion_type": "code"
    },
    {
      "name": "Firebase Storage Upload",
      "prompt": "Implement a Python function to upload a PDF file to Firebase Storage and return a signed download URL valid for 24 hours.",
      "completion_type": "code"
    },
    {
      "name": "Stripe Billing Integration",
      "prompt": "Create a FastAPI route to create a Stripe Checkout session for a monthly subscription. Redirect the user to the payment page and store the Stripe customer ID in Firestore.",
      "completion_type": "code"
    },
    {
      "name": "Limit Usage by Plan",
      "prompt": "Write a function that checks if a user (by WhatsApp number) has reached their monthly limit of 5 documents. If not, allow the action and increment the count in Firestore.",
      "completion_type": "code"
    },
    {
      "name": "Simple Contract Generator",
      "prompt": "Create a function that uses a legal contract template. Replace placeholders (like [name], [service], [value], [date]) with user input and generate a PDF contract in Portuguese.",
      "completion_type": "code"
    },
    {
      "name": "WhatsApp Bot Reply Logic",
      "prompt": "Build a function that takes user input from WhatsApp and determines the next step in the conversation (e.g., asking for amount, service, date). Maintain session state in Firestore.",
      "completion_type": "code"
    },
    {
      "name": "Webhook Signature Verification",
      "prompt": "Implement verification of WhatsApp webhook requests using X-Hub-Signature header and shared secret to ensure authenticity.",
      "completion_type": "code"
    },
    {
      "name": "Usage Report Endpoint",
      "prompt": "Generate a route that returns the number of documents generated by a user this month, pulled from Firestore.",
      "completion_type": "code"
    },
    {
      "name": "Error-Handled PDF Generation",
      "prompt": "Create a robust function that generates a receipt PDF and handles common errors like missing fields, corrupted fonts, or file write failures. Return a detailed error object on failure.",
      "completion_type": "code"
    },

    // --- Frontend Prompts Below ---
    {
      "name": "React Landing Page",
      "prompt": "Build a responsive React landing page for ReciboLegal using Tailwind CSS. Include a headline, value proposition, feature list, pricing section, WhatsApp call-to-action button, and footer with contact links.",
      "completion_type": "code"
    },
    {
      "name": "React: Pricing Component",
      "prompt": "Create a reusable React component that shows pricing plans for the service: Free Plan (5 receipts/month) and Premium Plan (unlimited, $7/month).",
      "completion_type": "code"
    },
    {
      "name": "React: Testimonials Section",
      "prompt": "Write a React component to display 3 user testimonials with names, pictures, and a quote. Make it mobile-friendly with a carousel for smaller screens.",
      "completion_type": "code"
    },
    {
      "name": "React + Firebase Auth (Email + Google)",
      "prompt": "Create a React authentication flow using Firebase Auth for email/password and Google login. Redirect authenticated users to the dashboard.",
      "completion_type": "code"
    },
    {
      "name": "React Dashboard: My Receipts",
      "prompt": "Build a React component to display the user’s receipts stored in Firebase. Include the document name, creation date, and download link.",
      "completion_type": "code"
    },
    {
      "name": "React Dashboard: Usage Meter",
      "prompt": "Write a React component that shows how many receipts/contracts the user has generated this month out of their limit (e.g., 3/5). Fetch the data from Firestore.",
      "completion_type": "code"
    },
    {
      "name": "React Component: WhatsApp FAQ Popup",
      "prompt": "Create a floating button in React that opens a FAQ popup about how to use ReciboLegal via WhatsApp. Include 3–5 common questions with answers.",
      "completion_type": "code"
    },
    {
      "name": "React: Success Checkout Page",
      "prompt": "Design a React component that is shown after successful subscription payment. Display a thank you message and a CTA to start issuing receipts via WhatsApp.",
      "completion_type": "code"
    }
  ]
}
