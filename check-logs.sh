#!/bin/bash

# Script para verificar logs de produ√ß√£o e diagnosticar problemas de gera√ß√£o de recibo
echo "=== Diagn√≥stico de Logs - ReciboLegal ==="
echo "Data/Hora: $(date)"
echo ""

# Verificar se estamos no servidor ou localmente
if command -v docker >/dev/null 2>&1 && docker ps >/dev/null 2>&1; then
    echo "üîç Executando no servidor de produ√ß√£o"
    
    # Verificar se os containers est√£o rodando
    echo ""
    echo "üì¶ Status dos Containers:"
    docker-compose -f docker-compose.prod.yml ps
    
    echo ""
    echo "üö® Logs de Erro Recentes (√∫ltimas 50 linhas):"
    docker-compose -f docker-compose.prod.yml logs --tail=50 recibolegal | grep -E "(error|Error|ERROR|fail|Fail|FAIL|exception|Exception|EXCEPTION)" || echo "Nenhum erro √≥bvio encontrado nos logs recentes"
    
    echo ""
    echo "üìä Logs Gerais Recentes (√∫ltimas 20 linhas):"
    docker-compose -f docker-compose.prod.yml logs --tail=20 recibolegal
    
    echo ""
    echo "üîÑ Status de Sa√∫de dos Servi√ßos:"
    # Testar endpoint de sa√∫de se existir
    if curl -s -o /dev/null -w "%{http_code}" https://recibolegal.com.br/health 2>/dev/null | grep -q "200"; then
        echo "‚úÖ Endpoint /health respondendo"
    else
        echo "‚ö†Ô∏è  Endpoint /health n√£o dispon√≠vel ou com problema"
    fi
    
    # Testar endpoint principal
    response=$(curl -s -o /dev/null -w "%{http_code}" https://recibolegal.com.br/ 2>/dev/null)
    echo "üìÑ P√°gina principal: HTTP $response"
    
    # Testar webhook
    webhook_response=$(curl -s -o /dev/null -w "%{http_code}" -X POST https://recibolegal.com.br/api/whatsapp/webhook 2>/dev/null)
    echo "üîó Webhook WhatsApp: HTTP $webhook_response"
    
    echo ""
    echo "üîç Procurando Erros Espec√≠ficos de Gera√ß√£o de Recibo:"
    docker-compose -f docker-compose.prod.yml logs recibolegal | grep -i -E "(recibo|receipt|generate|pdf|error)" | tail -10 || echo "Nenhum log espec√≠fico de recibo encontrado"
    
    echo ""
    echo "üíæ Uso de Mem√≥ria e CPU:"
    docker stats --no-stream --format "table {{.Container}}\t{{.CPUPerc}}\t{{.MemUsage}}\t{{.MemPerc}}" $(docker-compose -f docker-compose.prod.yml ps -q) 2>/dev/null || echo "N√£o foi poss√≠vel obter estat√≠sticas de recursos"
    
    echo ""
    echo "üìÅ Verificando Volumes e Armazenamento:"
    docker volume ls | grep recibolegal || echo "Nenhum volume espec√≠fico encontrado"
    
else
    echo "üè† Executando localmente - conectando ao servidor remoto para verificar logs"
    echo ""
    echo "Para verificar logs remotamente, execute no servidor:"
    echo "ssh root@recibolegal.com.br"
    echo "cd /path/to/recibolegal"
    echo "./check-logs.sh"
    echo ""
    echo "Ou execute comandos diretos:"
    echo "docker-compose -f docker-compose.prod.yml logs --tail=50 recibolegal"
fi

echo ""
echo "=== Comandos √öteis para Debug ==="
echo "Ver logs em tempo real:"
echo "docker-compose -f docker-compose.prod.yml logs -f recibolegal"
echo ""
echo "Ver logs espec√≠ficos por tempo:"
echo "docker-compose -f docker-compose.prod.yml logs --since=1h recibolegal"
echo ""
echo "Reiniciar apenas a aplica√ß√£o:"
echo "docker-compose -f docker-compose.prod.yml restart recibolegal"
echo ""
echo "=== Fim do Diagn√≥stico ==="
